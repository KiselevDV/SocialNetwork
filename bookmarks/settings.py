"""
Django settings for bookmarks project.

Generated by 'django-admin startproject' using Django 2.2.17.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'kt=wrly^33x&of$2e8++gg7zt$0xdrrg72di3k1u&ias3g3e^_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Список используемых доменов
ALLOWED_HOSTS = [
    'mysite.com',
    'localhost',
    '127.0.0.1',
    '5953b4008876.ngrok.io',
]

# Application definition

INSTALLED_APPS = [
    'account.apps.AccountConfig',  # создание соц. сети

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',  # система сообщений
    'django.contrib.staticfiles',

    'social_django',  # аутентификация через соц сети
    'images.apps.ImagesConfig',  # сохранение изображений в закладках на сайте
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',  # настройки сообщений
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bookmarks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                # добавляет переменую 'message' в контекст шаблонов
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmarks.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

# Базовый URL для формирования адресов файлов
MEDIA_URL = '/media/'
# Путь в файловой ситеме к данным файлам
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Адреса куда будет перенаправлен пользователь после при
# успешной ваторизации, для входа в систему и выхода из неё
LOGIN_REDIRECT_URL = 'dashboard'
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'

# Для отправки e-mail
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Список бэкэндов аутентификации проекта
AUTHENTICATION_BACKENDS = [
    # Бэкэнд по умолчанию использует логин и пароль, находится в (django.contrib.auth)
    'django.contrib.auth.backends.ModelBackend',
    # Кастомный бэкэнд (по e-mail вместо логина)
    'account.authentication.EmailAuthBackend',
    # Аутентификация через соц сети
    'social_core.backends.facebook.FacebookOAuth2',
    # 'social_core.backends.twitter.TwitterOAuth',
    # 'social_core.backends.google.GoogleOAuth2',
]

# Настройки авторизации через соц сети
SOCIAL_AUTH_FACEBOOK_KEY = ''  # Facebook App ID
SOCIAL_AUTH_FACEBOOK_SECRET = ''  # Facebook App Secret
# Какие данные будем запрашивать из аккаута
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']

# SOCIAL_AUTH_TWITTER_KEY = ''  # Twitter Consumer Key
# SOCIAL_AUTH_TWITTER_SECRET = ''  # Twitter Consumer Secret

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = ''  # Google Consumer Key
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = ''  # Google Consumer Secret
